// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cidfrcHUv3GUJnrrNFqyUX
// Component: FlwDDlJUG0eo

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { AntdAvatar } from "@plasmicpkgs/antd5/skinny/registerAvatar";
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import { AntdPagination } from "@plasmicpkgs/antd5/skinny/registerPagination";
import { paginationHelpers as AntdPagination_Helpers } from "@plasmicpkgs/antd5/skinny/registerPagination";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: cidfrcHUv3GUJnrrNFqyUX/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: FlwDDlJUG0eo/css

import ArrowSquareRightIcon from "./icons/PlasmicIcon__ArrowSquareRight"; // plasmic-import: shFbDkMxuc_0/icon
import SearchIcon from "./icons/PlasmicIcon__Search"; // plasmic-import: PlvJlfU0S44b/icon
import ListFilterIcon from "./icons/PlasmicIcon__ListFilter"; // plasmic-import: mrUZ3pQ-I7S0/icon
import HorizontalInsetIcon from "./icons/PlasmicIcon__HorizontalInset"; // plasmic-import: 7-nAt5cu6UJ5/icon
import PlayArrowFilledIcon from "./icons/PlasmicIcon__PlayArrowFilled"; // plasmic-import: FY_TNj_tUhx-/icon
import NoteIcon from "./icons/PlasmicIcon__Note"; // plasmic-import: 7Uf01IFWNWBr/icon
import MoreVertIcon from "./icons/PlasmicIcon__MoreVert"; // plasmic-import: vasOEQWeZVdB/icon
import Group2Icon from "./icons/PlasmicIcon__Group2"; // plasmic-import: QmEwVn_5-X4Z/icon
import LogOutIcon from "./icons/PlasmicIcon__LogOut"; // plasmic-import: 02luH__jXM0R/icon
import Rectangle1Icon from "./icons/PlasmicIcon__Rectangle1"; // plasmic-import: rI8Lb9a5jNCi/icon
import Rectangle2Icon from "./icons/PlasmicIcon__Rectangle2"; // plasmic-import: EFrHpzn9v1QK/icon
import Ellipse1Icon from "./icons/PlasmicIcon__Ellipse1"; // plasmic-import: 3JyE5emtAUbG/icon
import Group13Icon from "./icons/PlasmicIcon__Group13"; // plasmic-import: 0IbVkrlqnBxX/icon
import Group5Icon from "./icons/PlasmicIcon__Group5"; // plasmic-import: jq3uzkUYuPrM/icon
import Group6Icon from "./icons/PlasmicIcon__Group6"; // plasmic-import: LbajnMvX9eYG/icon
import Group12Icon from "./icons/PlasmicIcon__Group12"; // plasmic-import: 0UBgt_qBHvNw/icon
import SidebarToggleIcon from "./icons/PlasmicIcon__SidebarToggle"; // plasmic-import: 2QK5dgR495dp/icon
import HorizontalInset2Icon from "./icons/PlasmicIcon__HorizontalInset2"; // plasmic-import: F_TInT7KLovp/icon
import MoreVert2Icon from "./icons/PlasmicIcon__MoreVert2"; // plasmic-import: Uc89amA7bB3I/icon
import Group7Icon from "./icons/PlasmicIcon__Group7"; // plasmic-import: TEfD6pQewchz/icon
import Group8Icon from "./icons/PlasmicIcon__Group8"; // plasmic-import: 77BScNsdlLAf/icon
import Search2Icon from "./icons/PlasmicIcon__Search2"; // plasmic-import: NqaznJ0ZhAIl/icon
import ArrowSquareDownIcon from "./icons/PlasmicIcon__ArrowSquareDown"; // plasmic-import: qYBEeDPbIEZc/icon
import GridSelectedIcon from "./icons/PlasmicIcon__GridSelected"; // plasmic-import: P8Vezaz6axGF/icon
import ListDefaultIcon from "./icons/PlasmicIcon__ListDefault"; // plasmic-import: NTmq5ptcMlEv/icon
import MoreVert3Icon from "./icons/PlasmicIcon__MoreVert3"; // plasmic-import: F4IgxbcTxrr3/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  appDashboard?: Flex__<"div">;
  sidebarDashboard?: Flex__<"div">;
  sidebar?: Flex__<"div">;
  upperPart?: Flex__<"div">;
  frame77?: Flex__<"div">;
  panel?: Flex__<"div">;
  frame63?: Flex__<"div">;
  frame46?: Flex__<"div">;
  avatar?: Flex__<typeof AntdAvatar>;
  frame52?: Flex__<"div">;
  frame64?: Flex__<"div">;
  search?: Flex__<"div">;
  frame47?: Flex__<"div">;
  filterWithSelected?: Flex__<"div">;
  frame48?: Flex__<"div">;
  frame49?: Flex__<"div">;
  divider?: Flex__<"div">;
  frame56?: Flex__<"div">;
  frame65?: Flex__<"div">;
  frame66?: Flex__<"div">;
  categoryDefault?: Flex__<"div">;
  categoryExpanded?: Flex__<"div">;
  recent?: Flex__<"div">;
  catergoryItem?: Flex__<"div">;
  noteItemDefault?: Flex__<"div">;
  noteItemHover?: Flex__<"div">;
  head?: Flex__<"div">;
  diary?: Flex__<"div">;
  noteItemDefault2?: Flex__<"div">;
  diary2?: Flex__<"div">;
  bottomPart?: Flex__<"div">;
  settingLogout?: Flex__<"div">;
  noteItemDefault3?: Flex__<"div">;
  settings?: Flex__<"div">;
  noteItemDefault4?: Flex__<"div">;
  verticalStackWindow?: Flex__<"div">;
  dashboardHeader?: Flex__<"div">;
  dashboardNavDesktop?: Flex__<"div">;
  createButtons?: Flex__<"div">;
  logoDefault?: Flex__<"div">;
  logo?: Flex__<"div">;
  group11?: Flex__<"div">;
  rectangle2?: Flex__<"div">;
  dashboardHover?: Flex__<"div">;
  sidebarToggle?: Flex__<"div">;
  layoutDashboard?: Flex__<"div">;
  createNoteDefault?: Flex__<"div">;
  layer1?: Flex__<"div">;
  createFolderDefault?: Flex__<"div">;
  layer12?: Flex__<"div">;
  searchFilterDefault?: Flex__<"div">;
  filterSearchIcon?: Flex__<"div">;
  sidebarTogglerHover?: Flex__<"div">;
  dashboardWindow?: Flex__<"div">;
  dashboardBody?: Flex__<"div">;
  desktopRecentArea?: Flex__<"div">;
  title?: Flex__<"div">;
  divider2?: Flex__<"div">;
  frame57?: Flex__<"div">;
  createButtons2?: Flex__<"div">;
  recentNoteDesktop?: Flex__<"div">;
  imageHolder?: Flex__<"div">;
  image?: Flex__<"div">;
  body?: Flex__<"div">;
  text?: Flex__<"div">;
  recentNoteDesktop2?: Flex__<"div">;
  imageHolder2?: Flex__<"div">;
  image2?: Flex__<"div">;
  body2?: Flex__<"div">;
  text2?: Flex__<"div">;
  recentNoteDesktop3?: Flex__<"div">;
  imageHolder3?: Flex__<"div">;
  image3?: Flex__<"div">;
  body3?: Flex__<"div">;
  text3?: Flex__<"div">;
  desktopCreateElement?: Flex__<"div">;
  title2?: Flex__<"div">;
  divider3?: Flex__<"div">;
  frame58?: Flex__<"div">;
  createButtons3?: Flex__<"div">;
  notes?: Flex__<"div">;
  createNote?: Flex__<"div">;
  layer13?: Flex__<"div">;
  notes2?: Flex__<"div">;
  folder?: Flex__<"div">;
  createFolderIcon?: Flex__<"div">;
  layer14?: Flex__<"div">;
  notes3?: Flex__<"div">;
  desktopTabWindow?: Flex__<"div">;
  tabContainer?: Flex__<"div">;
  tabs?: Flex__<"div">;
  tabButtonDefault?: Flex__<"div">;
  tabButtonActive?: Flex__<"div">;
  divider4?: Flex__<"div">;
  frame59?: Flex__<"div">;
  expanded?: Flex__<"div">;
  head2?: Flex__<"div">;
  name?: Flex__<"div">;
  all?: Flex__<"div">;
  search2?: Flex__<"div">;
  frame50?: Flex__<"div">;
  filter?: Flex__<"div">;
  filterBy?: Flex__<"div">;
  category?: Flex__<"div">;
  arrowSquareDownDefault?: Flex__<"div">;
  info?: Flex__<"div">;
  arrowSquareDownDefault2?: Flex__<"div">;
  viewAs?: Flex__<"div">;
  grid?: Flex__<"div">;
  list?: Flex__<"div">;
  desktopFolderList?: Flex__<"div">;
  codeReview?: Flex__<"div">;
  card?: Flex__<"div">;
  image4?: Flex__<"div">;
  folderIcon?: Flex__<"div">;
  body4?: Flex__<"div">;
  text4?: Flex__<"div">;
  codeReview2?: Flex__<"div">;
  buttonGroup?: Flex__<"div">;
  button?: Flex__<typeof AntdButton>;
  button2?: Flex__<typeof AntdButton>;
  created?: Flex__<"div">;
  _9Files?: Flex__<"div">;
  lastUpdated?: Flex__<"div">;
  edit?: Flex__<"div">;
  taskList?: Flex__<"div">;
  card2?: Flex__<"div">;
  image5?: Flex__<"div">;
  folderIcon2?: Flex__<"div">;
  body5?: Flex__<"div">;
  text5?: Flex__<"div">;
  codeReview3?: Flex__<"div">;
  buttonGroup2?: Flex__<"div">;
  button3?: Flex__<typeof AntdButton>;
  button4?: Flex__<typeof AntdButton>;
  created2?: Flex__<"div">;
  _9Files2?: Flex__<"div">;
  lastUpdated2?: Flex__<"div">;
  _9MinAgo?: Flex__<"div">;
  edit2?: Flex__<"div">;
  map?: Flex__<"div">;
  card3?: Flex__<"div">;
  image6?: Flex__<"div">;
  folderIcon3?: Flex__<"div">;
  body6?: Flex__<"div">;
  text6?: Flex__<"div">;
  codeReview4?: Flex__<"div">;
  buttonGroup3?: Flex__<"div">;
  button5?: Flex__<typeof AntdButton>;
  button6?: Flex__<typeof AntdButton>;
  created3?: Flex__<"div">;
  _9Files3?: Flex__<"div">;
  lastUpdated3?: Flex__<"div">;
  _9MinAgo2?: Flex__<"div">;
  edit3?: Flex__<"div">;
  market?: Flex__<"div">;
  card4?: Flex__<"div">;
  image7?: Flex__<"div">;
  folderIcon4?: Flex__<"div">;
  body7?: Flex__<"div">;
  text7?: Flex__<"div">;
  codeReview5?: Flex__<"div">;
  buttonGroup4?: Flex__<"div">;
  button7?: Flex__<typeof AntdButton>;
  button8?: Flex__<typeof AntdButton>;
  created4?: Flex__<"div">;
  _9Files4?: Flex__<"div">;
  lastUpdated4?: Flex__<"div">;
  _9MinAgo3?: Flex__<"div">;
  edit4?: Flex__<"div">;
  story?: Flex__<"div">;
  card5?: Flex__<"div">;
  image8?: Flex__<"div">;
  folderIcon5?: Flex__<"div">;
  body8?: Flex__<"div">;
  text8?: Flex__<"div">;
  codeReview6?: Flex__<"div">;
  buttonGroup5?: Flex__<"div">;
  button9?: Flex__<typeof AntdButton>;
  button10?: Flex__<typeof AntdButton>;
  created5?: Flex__<"div">;
  _9Files5?: Flex__<"div">;
  lastUpdated5?: Flex__<"div">;
  _9MinAgo4?: Flex__<"div">;
  edit5?: Flex__<"div">;
  movie?: Flex__<"div">;
  card6?: Flex__<"div">;
  image9?: Flex__<"div">;
  folderIcon6?: Flex__<"div">;
  body9?: Flex__<"div">;
  text9?: Flex__<"div">;
  codeReview7?: Flex__<"div">;
  buttonGroup6?: Flex__<"div">;
  button11?: Flex__<typeof AntdButton>;
  button12?: Flex__<typeof AntdButton>;
  created6?: Flex__<"div">;
  _9Files6?: Flex__<"div">;
  lastUpdated6?: Flex__<"div">;
  _9MinAgo5?: Flex__<"div">;
  edit6?: Flex__<"div">;
  work?: Flex__<"div">;
  card7?: Flex__<"div">;
  image10?: Flex__<"div">;
  folderIcon7?: Flex__<"div">;
  body10?: Flex__<"div">;
  text10?: Flex__<"div">;
  codeReview8?: Flex__<"div">;
  buttonGroup7?: Flex__<"div">;
  button13?: Flex__<typeof AntdButton>;
  button14?: Flex__<typeof AntdButton>;
  created7?: Flex__<"div">;
  _9Files7?: Flex__<"div">;
  lastUpdated7?: Flex__<"div">;
  _9MinAgo6?: Flex__<"div">;
  edit7?: Flex__<"div">;
  family?: Flex__<"div">;
  card8?: Flex__<"div">;
  image11?: Flex__<"div">;
  folderIcon8?: Flex__<"div">;
  body11?: Flex__<"div">;
  text11?: Flex__<"div">;
  codeReview9?: Flex__<"div">;
  buttonGroup8?: Flex__<"div">;
  button15?: Flex__<typeof AntdButton>;
  button16?: Flex__<typeof AntdButton>;
  created8?: Flex__<"div">;
  _9Files8?: Flex__<"div">;
  lastUpdated8?: Flex__<"div">;
  _9MinAgo7?: Flex__<"div">;
  edit8?: Flex__<"div">;
  game?: Flex__<"div">;
  card9?: Flex__<"div">;
  image12?: Flex__<"div">;
  folderIcon9?: Flex__<"div">;
  body12?: Flex__<"div">;
  text12?: Flex__<"div">;
  codeReview10?: Flex__<"div">;
  buttonGroup9?: Flex__<"div">;
  button17?: Flex__<typeof AntdButton>;
  button18?: Flex__<typeof AntdButton>;
  created9?: Flex__<"div">;
  _9Files9?: Flex__<"div">;
  lastUpdated9?: Flex__<"div">;
  _9MinAgo8?: Flex__<"div">;
  edit9?: Flex__<"div">;
  pagination?: Flex__<"div">;
  pagination2?: Flex__<typeof AntdPagination>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "pagination2.currentPage",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 1,

        onMutate: generateOnMutateForSpec("currentPage", AntdPagination_Helpers)
      },
      {
        path: "pagination2.pageSize",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 10,

        onMutate: generateOnMutateForSpec("pageSize", AntdPagination_Helpers)
      },
      {
        path: "pagination2.startIndex",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("startIndex", AntdPagination_Helpers)
      },
      {
        path: "pagination2.endIndex",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("endIndex", AntdPagination_Helpers)
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"appDashboard"}
          data-plasmic-override={overrides.appDashboard}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.appDashboard
          )}
        >
          <div
            data-plasmic-name={"sidebarDashboard"}
            data-plasmic-override={overrides.sidebarDashboard}
            className={classNames(projectcss.all, sty.sidebarDashboard)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"sidebar"}
              data-plasmic-override={overrides.sidebar}
              hasGap={true}
              className={classNames(projectcss.all, sty.sidebar)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"upperPart"}
                data-plasmic-override={overrides.upperPart}
                hasGap={true}
                className={classNames(projectcss.all, sty.upperPart)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame77"}
                  data-plasmic-override={overrides.frame77}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame77)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Dy5B
                    )}
                  >
                    {"Dashboard"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"panel"}
                  data-plasmic-override={overrides.panel}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.panel)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame63"}
                    data-plasmic-override={overrides.frame63}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame63)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame46"}
                      data-plasmic-override={overrides.frame46}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame46)}
                    >
                      <AntdAvatar
                        data-plasmic-name={"avatar"}
                        data-plasmic-override={overrides.avatar}
                        className={classNames("__wab_instance", sty.avatar)}
                        letters={"AB"}
                        shape={"Circular"}
                        size={"XS"}
                      />

                      <div
                        data-plasmic-name={"frame52"}
                        data-plasmic-override={overrides.frame52}
                        className={classNames(projectcss.all, sty.frame52)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nrdS
                          )}
                        >
                          {"Hi,Jack"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fQjUg
                          )}
                        >
                          <ArrowSquareRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___7ZDjT
                            )}
                            role={"img"}
                          />
                        </div>
                      </div>
                    </Stack__>
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame64"}
                        data-plasmic-override={overrides.frame64}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame64)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"search"}
                          data-plasmic-override={overrides.search}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.search)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame47"}
                            data-plasmic-override={overrides.frame47}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame47)}
                          >
                            <SearchIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zHGzF
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___4Uit
                              )}
                            >
                              {"Search for Anything"}
                            </div>
                          </Stack__>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kkYuu
                            )}
                          >
                            {false ? (
                              <ArrowSquareRightIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__uYZfS
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"filterWithSelected"}
                          data-plasmic-override={overrides.filterWithSelected}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.filterWithSelected
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame48"}
                            data-plasmic-override={overrides.frame48}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame48)}
                          >
                            <ListFilterIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__iDu7M
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rbrU
                              )}
                            >
                              {"Filter By"}
                            </div>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"frame49"}
                              data-plasmic-override={overrides.frame49}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame49
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2ToVi
                                )}
                              >
                                {"3"}
                              </div>
                            </Stack__>
                          </Stack__>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__gkyLb
                            )}
                          >
                            <ArrowSquareRightIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__a7Q3Y
                              )}
                              role={"img"}
                            />
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"divider"}
                          data-plasmic-override={overrides.divider}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.divider)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame56"}
                            data-plasmic-override={overrides.frame56}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame56)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__s0PL4
                              )}
                            >
                              <HorizontalInsetIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__gFpO
                                )}
                                role={"img"}
                              />
                            </div>
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame65"}
                    data-plasmic-override={overrides.frame65}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame65)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame66"}
                      data-plasmic-override={overrides.frame66}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame66)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"categoryDefault"}
                        data-plasmic-override={overrides.categoryDefault}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.categoryDefault
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yftiy
                          )}
                        >
                          {"Recent"}
                        </div>
                        <Stack__
                          as={PlayArrowFilledIcon}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.svg__cr8Bm)}
                          role={"img"}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"categoryExpanded"}
                        data-plasmic-override={overrides.categoryExpanded}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.categoryExpanded
                        )}
                      >
                        <div
                          data-plasmic-name={"recent"}
                          data-plasmic-override={overrides.recent}
                          className={classNames(projectcss.all, sty.recent)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nC4Bm
                            )}
                          >
                            {"Favorite"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ji2Cg
                            )}
                          >
                            <Stack__
                              as={PlayArrowFilledIcon}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.svg__pf8AU
                              )}
                              role={"img"}
                            />
                          </div>
                        </div>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"catergoryItem"}
                          data-plasmic-override={overrides.catergoryItem}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.catergoryItem
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"noteItemDefault"}
                            data-plasmic-override={overrides.noteItemDefault}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.noteItemDefault
                            )}
                          >
                            <Stack__
                              as={NoteIcon}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.svg___9RiSu
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xpDvS
                              )}
                            >
                              {"Diary"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"noteItemHover"}
                            data-plasmic-override={overrides.noteItemHover}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.noteItemHover
                            )}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"head"}
                              data-plasmic-override={overrides.head}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.head)}
                            >
                              <Stack__
                                as={NoteIcon}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__mgBu
                                )}
                                role={"img"}
                              />

                              <div
                                data-plasmic-name={"diary"}
                                data-plasmic-override={overrides.diary}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.diary
                                )}
                              >
                                {"Task"}
                              </div>
                            </Stack__>
                            <MoreVertIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dOEwW
                              )}
                              role={"img"}
                            />
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"noteItemDefault2"}
                            data-plasmic-override={overrides.noteItemDefault2}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.noteItemDefault2
                            )}
                          >
                            <Stack__
                              as={NoteIcon}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.svg__hqZAj
                              )}
                              role={"img"}
                            />

                            <div
                              data-plasmic-name={"diary2"}
                              data-plasmic-override={overrides.diary2}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.diary2
                              )}
                            >
                              {"Code"}
                            </div>
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"bottomPart"}
                data-plasmic-override={overrides.bottomPart}
                hasGap={true}
                className={classNames(projectcss.all, sty.bottomPart)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"settingLogout"}
                  data-plasmic-override={overrides.settingLogout}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.settingLogout)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"noteItemDefault3"}
                    data-plasmic-override={overrides.noteItemDefault3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.noteItemDefault3)}
                  >
                    <div
                      data-plasmic-name={"settings"}
                      data-plasmic-override={overrides.settings}
                      className={classNames(projectcss.all, sty.settings)}
                    >
                      <Group2Icon
                        className={classNames(projectcss.all, sty.svg__ibFi)}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mkAq4
                      )}
                    >
                      {"Settings"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"noteItemDefault4"}
                    data-plasmic-override={overrides.noteItemDefault4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.noteItemDefault4)}
                  >
                    <Stack__
                      as={LogOutIcon}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.svg__oF7Jj)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5JPpH
                      )}
                    >
                      {"Logout"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
            <div
              data-plasmic-name={"verticalStackWindow"}
              data-plasmic-override={overrides.verticalStackWindow}
              className={classNames(projectcss.all, sty.verticalStackWindow)}
            >
              <div
                data-plasmic-name={"dashboardHeader"}
                data-plasmic-override={overrides.dashboardHeader}
                className={classNames(projectcss.all, sty.dashboardHeader)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"dashboardNavDesktop"}
                  data-plasmic-override={overrides.dashboardNavDesktop}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.dashboardNavDesktop
                  )}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"createButtons"}
                    data-plasmic-override={overrides.createButtons}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.createButtons)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"logoDefault"}
                      data-plasmic-override={overrides.logoDefault}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.logoDefault)}
                    >
                      <div
                        data-plasmic-name={"logo"}
                        data-plasmic-override={overrides.logo}
                        className={classNames(projectcss.all, sty.logo)}
                      >
                        <div
                          data-plasmic-name={"group11"}
                          data-plasmic-override={overrides.group11}
                          className={classNames(projectcss.all, sty.group11)}
                        >
                          <Rectangle1Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rGeY
                            )}
                            role={"img"}
                          />

                          <Rectangle2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___5RKx
                            )}
                            role={"img"}
                          />

                          <Ellipse1Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lsENw
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"rectangle2"}
                            data-plasmic-override={overrides.rectangle2}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle2
                            )}
                          />
                        </div>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"dashboardHover"}
                      data-plasmic-override={overrides.dashboardHover}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.dashboardHover)}
                    >
                      <div
                        data-plasmic-name={"sidebarToggle"}
                        data-plasmic-override={overrides.sidebarToggle}
                        className={classNames(
                          projectcss.all,
                          sty.sidebarToggle
                        )}
                      >
                        <div
                          data-plasmic-name={"layoutDashboard"}
                          data-plasmic-override={overrides.layoutDashboard}
                          className={classNames(
                            projectcss.all,
                            sty.layoutDashboard
                          )}
                        >
                          <Group13Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__skntt
                            )}
                            role={"img"}
                          />
                        </div>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"createNoteDefault"}
                      data-plasmic-override={overrides.createNoteDefault}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.createNoteDefault
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"layer1"}
                        data-plasmic-override={overrides.layer1}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.layer1)}
                      >
                        <Group5Icon
                          className={classNames(projectcss.all, sty.svg__oT110)}
                          role={"img"}
                        />
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"createFolderDefault"}
                      data-plasmic-override={overrides.createFolderDefault}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.createFolderDefault
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"layer12"}
                        data-plasmic-override={overrides.layer12}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.layer12)}
                      >
                        <Group6Icon
                          className={classNames(projectcss.all, sty.svg__moP57)}
                          role={"img"}
                        />
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"searchFilterDefault"}
                      data-plasmic-override={overrides.searchFilterDefault}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.searchFilterDefault
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"filterSearchIcon"}
                        data-plasmic-override={overrides.filterSearchIcon}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.filterSearchIcon
                        )}
                      >
                        <Group12Icon
                          className={classNames(projectcss.all, sty.svg__yud1K)}
                          role={"img"}
                        />
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"sidebarTogglerHover"}
                      data-plasmic-override={overrides.sidebarTogglerHover}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.sidebarTogglerHover
                      )}
                    >
                      <SidebarToggleIcon
                        className={classNames(projectcss.all, sty.svg__jHil7)}
                        role={"img"}
                      />
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"dashboardWindow"}
                data-plasmic-override={overrides.dashboardWindow}
                hasGap={true}
                className={classNames(projectcss.all, sty.dashboardWindow)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"dashboardBody"}
                  data-plasmic-override={overrides.dashboardBody}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.dashboardBody)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"desktopRecentArea"}
                    data-plasmic-override={overrides.desktopRecentArea}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.desktopRecentArea
                    )}
                  >
                    <div
                      data-plasmic-name={"title"}
                      data-plasmic-override={overrides.title}
                      className={classNames(projectcss.all, sty.title)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oy5Cb
                        )}
                      >
                        {"Recent Notes"}
                      </div>
                      {false ? (
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"divider2"}
                          data-plasmic-override={overrides.divider2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.divider2)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame57"}
                            data-plasmic-override={overrides.frame57}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame57)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__vswQw
                              )}
                            >
                              <HorizontalInset2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__jXmdk
                                )}
                                role={"img"}
                              />
                            </div>
                          </Stack__>
                        </Stack__>
                      ) : null}
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"createButtons2"}
                      data-plasmic-override={overrides.createButtons2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.createButtons2)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"recentNoteDesktop"}
                        data-plasmic-override={overrides.recentNoteDesktop}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.recentNoteDesktop
                        )}
                      >
                        <div
                          data-plasmic-name={"imageHolder"}
                          data-plasmic-override={overrides.imageHolder}
                          className={classNames(
                            projectcss.all,
                            sty.imageHolder
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"image"}
                            data-plasmic-override={overrides.image}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.image)}
                          />
                        </div>
                        <div
                          data-plasmic-name={"body"}
                          data-plasmic-override={overrides.body}
                          className={classNames(projectcss.all, sty.body)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"text"}
                            data-plasmic-override={overrides.text}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.text)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__u2T3E
                              )}
                            >
                              {"Title"}
                            </div>
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nvq24
                                )}
                              >
                                {"Edited 9min ago"}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <MoreVert2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yagva
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"recentNoteDesktop2"}
                        data-plasmic-override={overrides.recentNoteDesktop2}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.recentNoteDesktop2
                        )}
                      >
                        <div
                          data-plasmic-name={"imageHolder2"}
                          data-plasmic-override={overrides.imageHolder2}
                          className={classNames(
                            projectcss.all,
                            sty.imageHolder2
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"image2"}
                            data-plasmic-override={overrides.image2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.image2)}
                          />
                        </div>
                        <div
                          data-plasmic-name={"body2"}
                          data-plasmic-override={overrides.body2}
                          className={classNames(projectcss.all, sty.body2)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"text2"}
                            data-plasmic-override={overrides.text2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.text2)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___90Yrv
                              )}
                            >
                              {"Title"}
                            </div>
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kmEhs
                                )}
                              >
                                {"Edited 9min ago"}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <MoreVert2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ccdW
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"recentNoteDesktop3"}
                        data-plasmic-override={overrides.recentNoteDesktop3}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.recentNoteDesktop3
                        )}
                      >
                        <div
                          data-plasmic-name={"imageHolder3"}
                          data-plasmic-override={overrides.imageHolder3}
                          className={classNames(
                            projectcss.all,
                            sty.imageHolder3
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"image3"}
                            data-plasmic-override={overrides.image3}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.image3)}
                          />
                        </div>
                        <div
                          data-plasmic-name={"body3"}
                          data-plasmic-override={overrides.body3}
                          className={classNames(projectcss.all, sty.body3)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"text3"}
                            data-plasmic-override={overrides.text3}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.text3)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qLez8
                              )}
                            >
                              {"Title"}
                            </div>
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ldmpk
                                )}
                              >
                                {"Edited 9min ago"}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <MoreVert2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hfQnY
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"desktopCreateElement"}
                    data-plasmic-override={overrides.desktopCreateElement}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.desktopCreateElement
                    )}
                  >
                    <div
                      data-plasmic-name={"title2"}
                      data-plasmic-override={overrides.title2}
                      className={classNames(projectcss.all, sty.title2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cAnWq
                        )}
                      >
                        {"Create"}
                      </div>
                      {false ? (
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"divider3"}
                          data-plasmic-override={overrides.divider3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.divider3)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"frame58"}
                            data-plasmic-override={overrides.frame58}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame58)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__gfr64
                              )}
                            >
                              <HorizontalInset2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__pqhb
                                )}
                                role={"img"}
                              />
                            </div>
                          </Stack__>
                        </Stack__>
                      ) : null}
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"createButtons3"}
                      data-plasmic-override={overrides.createButtons3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.createButtons3)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"notes"}
                        data-plasmic-override={overrides.notes}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.notes)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"createNote"}
                          data-plasmic-override={overrides.createNote}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.createNote)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"layer13"}
                            data-plasmic-override={overrides.layer13}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.layer13)}
                          >
                            <Group7Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zFih
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"notes2"}
                          data-plasmic-override={overrides.notes2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.notes2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nhe23
                            )}
                          >
                            {"Notes"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yjWsv
                            )}
                          >
                            {"Create note file"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"folder"}
                        data-plasmic-override={overrides.folder}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.folder)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"createFolderIcon"}
                          data-plasmic-override={overrides.createFolderIcon}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.createFolderIcon
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"layer14"}
                            data-plasmic-override={overrides.layer14}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.layer14)}
                          >
                            <Group8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__l2Gos
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"notes3"}
                          data-plasmic-override={overrides.notes3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.notes3)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fVikp
                            )}
                          >
                            {"Folders"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1Mc5A
                            )}
                          >
                            {"Create new folder"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"desktopTabWindow"}
                    data-plasmic-override={overrides.desktopTabWindow}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.desktopTabWindow)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"tabContainer"}
                      data-plasmic-override={overrides.tabContainer}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tabContainer)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"tabs"}
                        data-plasmic-override={overrides.tabs}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tabs)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"tabButtonDefault"}
                          data-plasmic-override={overrides.tabButtonDefault}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.tabButtonDefault
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3CLSy
                            )}
                          >
                            {"Note"}
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"tabButtonActive"}
                          data-plasmic-override={overrides.tabButtonActive}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.tabButtonActive
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cDlcF
                            )}
                          >
                            {"Folder"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"divider4"}
                        data-plasmic-override={overrides.divider4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.divider4)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"frame59"}
                          data-plasmic-override={overrides.frame59}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame59)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ncVeL
                            )}
                          >
                            <HorizontalInset2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__eZtWn
                              )}
                              role={"img"}
                            />
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"expanded"}
                      data-plasmic-override={overrides.expanded}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.expanded)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"head2"}
                        data-plasmic-override={overrides.head2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.head2)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"name"}
                          data-plasmic-override={overrides.name}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.name)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4Ekmr
                            )}
                          >
                            {"Folders"}
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"all"}
                          data-plasmic-override={overrides.all}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.all)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"search2"}
                            data-plasmic-override={overrides.search2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.search2)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"frame50"}
                              data-plasmic-override={overrides.frame50}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame50
                              )}
                            >
                              <Search2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__cYrCm
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__e2DsV
                                )}
                              >
                                {"Search for Anything"}
                              </div>
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"filter"}
                            data-plasmic-override={overrides.filter}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.filter)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"filterBy"}
                              data-plasmic-override={overrides.filterBy}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.filterBy
                              )}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"category"}
                                data-plasmic-override={overrides.category}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.category
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__w02Oi
                                  )}
                                >
                                  {"All"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__sYyHt
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"arrowSquareDownDefault"}
                                    data-plasmic-override={
                                      overrides.arrowSquareDownDefault
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.arrowSquareDownDefault
                                    )}
                                  >
                                    <ArrowSquareDownIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___0SE3W
                                      )}
                                      role={"img"}
                                    />
                                  </Stack__>
                                </div>
                              </Stack__>
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"info"}
                                data-plasmic-override={overrides.info}
                                hasGap={true}
                                className={classNames(projectcss.all, sty.info)}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___5KiDo
                                  )}
                                >
                                  {"Date Created"}
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__k8Dwj
                                  )}
                                >
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={
                                      "arrowSquareDownDefault2"
                                    }
                                    data-plasmic-override={
                                      overrides.arrowSquareDownDefault2
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.arrowSquareDownDefault2
                                    )}
                                  >
                                    <ArrowSquareDownIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__qj2Oj
                                      )}
                                      role={"img"}
                                    />
                                  </Stack__>
                                </div>
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"viewAs"}
                              data-plasmic-override={overrides.viewAs}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.viewAs)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"grid"}
                                data-plasmic-override={overrides.grid}
                                hasGap={true}
                                className={classNames(projectcss.all, sty.grid)}
                              >
                                <GridSelectedIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__azVr
                                  )}
                                  role={"img"}
                                />
                              </Stack__>
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"list"}
                                data-plasmic-override={overrides.list}
                                hasGap={true}
                                className={classNames(projectcss.all, sty.list)}
                              >
                                <ListDefaultIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__dYw1G
                                  )}
                                  role={"img"}
                                />
                              </Stack__>
                            </Stack__>
                          </Stack__>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"desktopFolderList"}
                        data-plasmic-override={overrides.desktopFolderList}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.desktopFolderList
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"codeReview"}
                          data-plasmic-override={overrides.codeReview}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.codeReview)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card"}
                            data-plasmic-override={overrides.card}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image4"}
                              data-plasmic-override={overrides.image4}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.image4)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon"}
                                data-plasmic-override={overrides.folderIcon}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__oG4Kt)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body4"}
                              data-plasmic-override={overrides.body4}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body4)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text4"}
                                data-plasmic-override={overrides.text4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text4
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview2"}
                                  data-plasmic-override={overrides.codeReview2}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview2
                                  )}
                                >
                                  {"Code Review "}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup"}
                                  data-plasmic-override={overrides.buttonGroup}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button"}
                                      data-plasmic-override={overrides.button}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__cchF1
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button2"}
                                    data-plasmic-override={overrides.button2}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button2
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__mYek9
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created"}
                            data-plasmic-override={overrides.created}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created)}
                          >
                            <div
                              data-plasmic-name={"_9Files"}
                              data-plasmic-override={overrides._9Files}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files
                              )}
                            >
                              {"9 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated"}
                            data-plasmic-override={overrides.lastUpdated}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___5VsmE
                              )}
                            >
                              {"9min ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit"}
                            data-plasmic-override={overrides.edit}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__y8WGx
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"taskList"}
                          data-plasmic-override={overrides.taskList}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.taskList)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card2"}
                            data-plasmic-override={overrides.card2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card2)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image5"}
                              data-plasmic-override={overrides.image5}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.image5)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon2"}
                                data-plasmic-override={overrides.folderIcon2}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon2
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__rfWpi)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body5"}
                              data-plasmic-override={overrides.body5}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body5)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text5"}
                                data-plasmic-override={overrides.text5}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text5
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview3"}
                                  data-plasmic-override={overrides.codeReview3}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview3
                                  )}
                                >
                                  {"Task List"}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup2"}
                                  data-plasmic-override={overrides.buttonGroup2}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup2
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button3"}
                                      data-plasmic-override={overrides.button3}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button3
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__hmzuJ
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button4"}
                                    data-plasmic-override={overrides.button4}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button4
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__c3Z7
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created2"}
                            data-plasmic-override={overrides.created2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created2)}
                          >
                            <div
                              data-plasmic-name={"_9Files2"}
                              data-plasmic-override={overrides._9Files2}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files2
                              )}
                            >
                              {"12 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated2"}
                            data-plasmic-override={overrides.lastUpdated2}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated2
                            )}
                          >
                            <div
                              data-plasmic-name={"_9MinAgo"}
                              data-plasmic-override={overrides._9MinAgo}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9MinAgo
                              )}
                            >
                              {"30min ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit2"}
                            data-plasmic-override={overrides.edit2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit2)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__iPmbE
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"map"}
                          data-plasmic-override={overrides.map}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.map)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card3"}
                            data-plasmic-override={overrides.card3}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card3)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image6"}
                              data-plasmic-override={overrides.image6}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.image6)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon3"}
                                data-plasmic-override={overrides.folderIcon3}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon3
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__wuKNa)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body6"}
                              data-plasmic-override={overrides.body6}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body6)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text6"}
                                data-plasmic-override={overrides.text6}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text6
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview4"}
                                  data-plasmic-override={overrides.codeReview4}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview4
                                  )}
                                >
                                  {"Map"}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup3"}
                                  data-plasmic-override={overrides.buttonGroup3}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup3
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button5"}
                                      data-plasmic-override={overrides.button5}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button5
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__bo4Gd
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button6"}
                                    data-plasmic-override={overrides.button6}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button6
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__i8G6
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created3"}
                            data-plasmic-override={overrides.created3}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created3)}
                          >
                            <div
                              data-plasmic-name={"_9Files3"}
                              data-plasmic-override={overrides._9Files3}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files3
                              )}
                            >
                              {"14 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated3"}
                            data-plasmic-override={overrides.lastUpdated3}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated3
                            )}
                          >
                            <div
                              data-plasmic-name={"_9MinAgo2"}
                              data-plasmic-override={overrides._9MinAgo2}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9MinAgo2
                              )}
                            >
                              {"1hr ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit3"}
                            data-plasmic-override={overrides.edit3}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit3)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cA1Lb
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"market"}
                          data-plasmic-override={overrides.market}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.market)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card4"}
                            data-plasmic-override={overrides.card4}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card4)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image7"}
                              data-plasmic-override={overrides.image7}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.image7)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon4"}
                                data-plasmic-override={overrides.folderIcon4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon4
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img___9JH)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body7"}
                              data-plasmic-override={overrides.body7}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body7)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text7"}
                                data-plasmic-override={overrides.text7}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text7
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview5"}
                                  data-plasmic-override={overrides.codeReview5}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview5
                                  )}
                                >
                                  {"Market"}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup4"}
                                  data-plasmic-override={overrides.buttonGroup4}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup4
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button7"}
                                      data-plasmic-override={overrides.button7}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button7
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__v6T9
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button8"}
                                    data-plasmic-override={overrides.button8}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button8
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__amOcH
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created4"}
                            data-plasmic-override={overrides.created4}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created4)}
                          >
                            <div
                              data-plasmic-name={"_9Files4"}
                              data-plasmic-override={overrides._9Files4}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files4
                              )}
                            >
                              {"1 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated4"}
                            data-plasmic-override={overrides.lastUpdated4}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated4
                            )}
                          >
                            <div
                              data-plasmic-name={"_9MinAgo3"}
                              data-plasmic-override={overrides._9MinAgo3}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9MinAgo3
                              )}
                            >
                              {"1hr 30min ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit4"}
                            data-plasmic-override={overrides.edit4}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit4)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gJpcx
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"story"}
                          data-plasmic-override={overrides.story}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.story)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card5"}
                            data-plasmic-override={overrides.card5}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card5)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image8"}
                              data-plasmic-override={overrides.image8}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.image8)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon5"}
                                data-plasmic-override={overrides.folderIcon5}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon5
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__q3Den)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body8"}
                              data-plasmic-override={overrides.body8}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body8)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text8"}
                                data-plasmic-override={overrides.text8}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text8
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview6"}
                                  data-plasmic-override={overrides.codeReview6}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview6
                                  )}
                                >
                                  {"Story"}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup5"}
                                  data-plasmic-override={overrides.buttonGroup5}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup5
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button9"}
                                      data-plasmic-override={overrides.button9}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button9
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text___5P85W
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button10"}
                                    data-plasmic-override={overrides.button10}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button10
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__sfM4P
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created5"}
                            data-plasmic-override={overrides.created5}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created5)}
                          >
                            <div
                              data-plasmic-name={"_9Files5"}
                              data-plasmic-override={overrides._9Files5}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files5
                              )}
                            >
                              {"3 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated5"}
                            data-plasmic-override={overrides.lastUpdated5}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated5
                            )}
                          >
                            <div
                              data-plasmic-name={"_9MinAgo4"}
                              data-plasmic-override={overrides._9MinAgo4}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9MinAgo4
                              )}
                            >
                              {"1hr 40min ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit5"}
                            data-plasmic-override={overrides.edit5}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit5)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__t9GX5
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"movie"}
                          data-plasmic-override={overrides.movie}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.movie)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card6"}
                            data-plasmic-override={overrides.card6}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card6)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image9"}
                              data-plasmic-override={overrides.image9}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.image9)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon6"}
                                data-plasmic-override={overrides.folderIcon6}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon6
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__ompXi)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body9"}
                              data-plasmic-override={overrides.body9}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body9)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text9"}
                                data-plasmic-override={overrides.text9}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text9
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview7"}
                                  data-plasmic-override={overrides.codeReview7}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview7
                                  )}
                                >
                                  {"Movie"}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup6"}
                                  data-plasmic-override={overrides.buttonGroup6}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup6
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button11"}
                                      data-plasmic-override={overrides.button11}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button11
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__mey8D
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button12"}
                                    data-plasmic-override={overrides.button12}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button12
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__ef32W
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created6"}
                            data-plasmic-override={overrides.created6}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created6)}
                          >
                            <div
                              data-plasmic-name={"_9Files6"}
                              data-plasmic-override={overrides._9Files6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files6
                              )}
                            >
                              {"6 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated6"}
                            data-plasmic-override={overrides.lastUpdated6}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated6
                            )}
                          >
                            <div
                              data-plasmic-name={"_9MinAgo5"}
                              data-plasmic-override={overrides._9MinAgo5}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9MinAgo5
                              )}
                            >
                              {"1d ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit6"}
                            data-plasmic-override={overrides.edit6}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit6)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__iTyEg
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"work"}
                          data-plasmic-override={overrides.work}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.work)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card7"}
                            data-plasmic-override={overrides.card7}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card7)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image10"}
                              data-plasmic-override={overrides.image10}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.image10
                              )}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon7"}
                                data-plasmic-override={overrides.folderIcon7}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon7
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__j1Nt)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body10"}
                              data-plasmic-override={overrides.body10}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body10)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text10"}
                                data-plasmic-override={overrides.text10}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text10
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview8"}
                                  data-plasmic-override={overrides.codeReview8}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview8
                                  )}
                                >
                                  {"Work"}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup7"}
                                  data-plasmic-override={overrides.buttonGroup7}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup7
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button13"}
                                      data-plasmic-override={overrides.button13}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button13
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__w5CRo
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button14"}
                                    data-plasmic-override={overrides.button14}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button14
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__neYm
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created7"}
                            data-plasmic-override={overrides.created7}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created7)}
                          >
                            <div
                              data-plasmic-name={"_9Files7"}
                              data-plasmic-override={overrides._9Files7}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files7
                              )}
                            >
                              {"7 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated7"}
                            data-plasmic-override={overrides.lastUpdated7}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated7
                            )}
                          >
                            <div
                              data-plasmic-name={"_9MinAgo6"}
                              data-plasmic-override={overrides._9MinAgo6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9MinAgo6
                              )}
                            >
                              {"1d ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit7"}
                            data-plasmic-override={overrides.edit7}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit7)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___3YwDm
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"family"}
                          data-plasmic-override={overrides.family}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.family)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card8"}
                            data-plasmic-override={overrides.card8}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card8)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image11"}
                              data-plasmic-override={overrides.image11}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.image11
                              )}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon8"}
                                data-plasmic-override={overrides.folderIcon8}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon8
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__azBah)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body11"}
                              data-plasmic-override={overrides.body11}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body11)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text11"}
                                data-plasmic-override={overrides.text11}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text11
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview9"}
                                  data-plasmic-override={overrides.codeReview9}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview9
                                  )}
                                >
                                  {"Family"}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup8"}
                                  data-plasmic-override={overrides.buttonGroup8}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup8
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button15"}
                                      data-plasmic-override={overrides.button15}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button15
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text___4PqNa
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button16"}
                                    data-plasmic-override={overrides.button16}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button16
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__wDhSk
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created8"}
                            data-plasmic-override={overrides.created8}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created8)}
                          >
                            <div
                              data-plasmic-name={"_9Files8"}
                              data-plasmic-override={overrides._9Files8}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files8
                              )}
                            >
                              {"8 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated8"}
                            data-plasmic-override={overrides.lastUpdated8}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated8
                            )}
                          >
                            <div
                              data-plasmic-name={"_9MinAgo7"}
                              data-plasmic-override={overrides._9MinAgo7}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9MinAgo7
                              )}
                            >
                              {"1d ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit8"}
                            data-plasmic-override={overrides.edit8}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit8)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__apcM
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"game"}
                          data-plasmic-override={overrides.game}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.game)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"card9"}
                            data-plasmic-override={overrides.card9}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.card9)}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"image12"}
                              data-plasmic-override={overrides.image12}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.image12
                              )}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"folderIcon9"}
                                data-plasmic-override={overrides.folderIcon9}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.folderIcon9
                                )}
                              >
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img___7BMb4)}
                                  displayHeight={"64px"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"84px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/quick_note_app/images/group14.svg",
                                    fullWidth: 84,
                                    fullHeight: 64,
                                    aspectRatio: 1.3125
                                  }}
                                />
                              </Stack__>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"body12"}
                              data-plasmic-override={overrides.body12}
                              hasGap={true}
                              className={classNames(projectcss.all, sty.body12)}
                            >
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"text12"}
                                data-plasmic-override={overrides.text12}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.text12
                                )}
                              >
                                <div
                                  data-plasmic-name={"codeReview10"}
                                  data-plasmic-override={overrides.codeReview10}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.codeReview10
                                  )}
                                >
                                  {"Game"}
                                </div>
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"buttonGroup9"}
                                  data-plasmic-override={overrides.buttonGroup9}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonGroup9
                                  )}
                                >
                                  {false ? (
                                    <AntdButton
                                      data-plasmic-name={"button17"}
                                      data-plasmic-override={overrides.button17}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button17
                                      )}
                                      size={"Medium"}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__hwEdY
                                        )}
                                      >
                                        {"Button"}
                                      </div>
                                    </AntdButton>
                                  ) : null}
                                  <AntdButton
                                    data-plasmic-name={"button18"}
                                    data-plasmic-override={overrides.button18}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button18
                                    )}
                                    size={"Medium"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__rdiv
                                      )}
                                    >
                                      {"Button"}
                                    </div>
                                  </AntdButton>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"created9"}
                            data-plasmic-override={overrides.created9}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.created9)}
                          >
                            <div
                              data-plasmic-name={"_9Files9"}
                              data-plasmic-override={overrides._9Files9}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9Files9
                              )}
                            >
                              {"13 File"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"lastUpdated9"}
                            data-plasmic-override={overrides.lastUpdated9}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.lastUpdated9
                            )}
                          >
                            <div
                              data-plasmic-name={"_9MinAgo8"}
                              data-plasmic-override={overrides._9MinAgo8}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._9MinAgo8
                              )}
                            >
                              {"2d ago"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"edit9"}
                            data-plasmic-override={overrides.edit9}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.edit9)}
                          >
                            <MoreVert3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__of96L
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"pagination"}
                        data-plasmic-override={overrides.pagination}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.pagination)}
                      >
                        {(() => {
                          const child$Props = {
                            className: classNames(
                              "__wab_instance",
                              sty.pagination2
                            ),
                            current: generateStateValueProp($state, [
                              "pagination2",
                              "currentPage"
                            ]),
                            defaultCurrent: 1,
                            defaultPageSize: 10,
                            onChange: async (...eventArgs: any) => {
                              generateStateOnChangePropForCodeComponents(
                                $state,
                                "currentPage",
                                ["pagination2", "currentPage"],
                                AntdPagination_Helpers
                              ).apply(null, eventArgs);
                              generateStateOnChangePropForCodeComponents(
                                $state,
                                "startIndex",
                                ["pagination2", "startIndex"],
                                AntdPagination_Helpers
                              ).apply(null, eventArgs);
                              generateStateOnChangePropForCodeComponents(
                                $state,
                                "endIndex",
                                ["pagination2", "endIndex"],
                                AntdPagination_Helpers
                              ).apply(null, eventArgs);
                            },
                            onShowSizeChange:
                              generateStateOnChangePropForCodeComponents(
                                $state,
                                "pageSize",
                                ["pagination2", "pageSize"],
                                AntdPagination_Helpers
                              ),
                            pageSize: generateStateValueProp($state, [
                              "pagination2",
                              "pageSize"
                            ]),
                            pageSizeOptions: [
                              { pageSize: 10 },
                              { pageSize: 20 },
                              { pageSize: 50 },
                              { pageSize: 100 }
                            ]
                          };
                          initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "currentPage",
                                plasmicStateName: "pagination2.currentPage"
                              },
                              {
                                name: "pageSize",
                                plasmicStateName: "pagination2.pageSize"
                              },
                              {
                                name: "startIndex",
                                plasmicStateName: "pagination2.startIndex"
                              },
                              {
                                name: "endIndex",
                                plasmicStateName: "pagination2.endIndex"
                              }
                            ],
                            [],
                            AntdPagination_Helpers ?? {},
                            child$Props
                          );

                          return (
                            <AntdPagination
                              data-plasmic-name={"pagination2"}
                              data-plasmic-override={overrides.pagination2}
                              {...child$Props}
                            />
                          );
                        })()}
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  appDashboard: [
    "appDashboard",
    "sidebarDashboard",
    "sidebar",
    "upperPart",
    "frame77",
    "panel",
    "frame63",
    "frame46",
    "avatar",
    "frame52",
    "frame64",
    "search",
    "frame47",
    "filterWithSelected",
    "frame48",
    "frame49",
    "divider",
    "frame56",
    "frame65",
    "frame66",
    "categoryDefault",
    "categoryExpanded",
    "recent",
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2",
    "bottomPart",
    "settingLogout",
    "noteItemDefault3",
    "settings",
    "noteItemDefault4",
    "verticalStackWindow",
    "dashboardHeader",
    "dashboardNavDesktop",
    "createButtons",
    "logoDefault",
    "logo",
    "group11",
    "rectangle2",
    "dashboardHover",
    "sidebarToggle",
    "layoutDashboard",
    "createNoteDefault",
    "layer1",
    "createFolderDefault",
    "layer12",
    "searchFilterDefault",
    "filterSearchIcon",
    "sidebarTogglerHover",
    "dashboardWindow",
    "dashboardBody",
    "desktopRecentArea",
    "title",
    "divider2",
    "frame57",
    "createButtons2",
    "recentNoteDesktop",
    "imageHolder",
    "image",
    "body",
    "text",
    "recentNoteDesktop2",
    "imageHolder2",
    "image2",
    "body2",
    "text2",
    "recentNoteDesktop3",
    "imageHolder3",
    "image3",
    "body3",
    "text3",
    "desktopCreateElement",
    "title2",
    "divider3",
    "frame58",
    "createButtons3",
    "notes",
    "createNote",
    "layer13",
    "notes2",
    "folder",
    "createFolderIcon",
    "layer14",
    "notes3",
    "desktopTabWindow",
    "tabContainer",
    "tabs",
    "tabButtonDefault",
    "tabButtonActive",
    "divider4",
    "frame59",
    "expanded",
    "head2",
    "name",
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list",
    "desktopFolderList",
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit",
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2",
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3",
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4",
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5",
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6",
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7",
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8",
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9",
    "pagination",
    "pagination2"
  ],
  sidebarDashboard: [
    "sidebarDashboard",
    "sidebar",
    "upperPart",
    "frame77",
    "panel",
    "frame63",
    "frame46",
    "avatar",
    "frame52",
    "frame64",
    "search",
    "frame47",
    "filterWithSelected",
    "frame48",
    "frame49",
    "divider",
    "frame56",
    "frame65",
    "frame66",
    "categoryDefault",
    "categoryExpanded",
    "recent",
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2",
    "bottomPart",
    "settingLogout",
    "noteItemDefault3",
    "settings",
    "noteItemDefault4",
    "verticalStackWindow",
    "dashboardHeader",
    "dashboardNavDesktop",
    "createButtons",
    "logoDefault",
    "logo",
    "group11",
    "rectangle2",
    "dashboardHover",
    "sidebarToggle",
    "layoutDashboard",
    "createNoteDefault",
    "layer1",
    "createFolderDefault",
    "layer12",
    "searchFilterDefault",
    "filterSearchIcon",
    "sidebarTogglerHover",
    "dashboardWindow",
    "dashboardBody",
    "desktopRecentArea",
    "title",
    "divider2",
    "frame57",
    "createButtons2",
    "recentNoteDesktop",
    "imageHolder",
    "image",
    "body",
    "text",
    "recentNoteDesktop2",
    "imageHolder2",
    "image2",
    "body2",
    "text2",
    "recentNoteDesktop3",
    "imageHolder3",
    "image3",
    "body3",
    "text3",
    "desktopCreateElement",
    "title2",
    "divider3",
    "frame58",
    "createButtons3",
    "notes",
    "createNote",
    "layer13",
    "notes2",
    "folder",
    "createFolderIcon",
    "layer14",
    "notes3",
    "desktopTabWindow",
    "tabContainer",
    "tabs",
    "tabButtonDefault",
    "tabButtonActive",
    "divider4",
    "frame59",
    "expanded",
    "head2",
    "name",
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list",
    "desktopFolderList",
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit",
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2",
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3",
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4",
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5",
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6",
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7",
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8",
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9",
    "pagination",
    "pagination2"
  ],
  sidebar: [
    "sidebar",
    "upperPart",
    "frame77",
    "panel",
    "frame63",
    "frame46",
    "avatar",
    "frame52",
    "frame64",
    "search",
    "frame47",
    "filterWithSelected",
    "frame48",
    "frame49",
    "divider",
    "frame56",
    "frame65",
    "frame66",
    "categoryDefault",
    "categoryExpanded",
    "recent",
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2",
    "bottomPart",
    "settingLogout",
    "noteItemDefault3",
    "settings",
    "noteItemDefault4"
  ],
  upperPart: [
    "upperPart",
    "frame77",
    "panel",
    "frame63",
    "frame46",
    "avatar",
    "frame52",
    "frame64",
    "search",
    "frame47",
    "filterWithSelected",
    "frame48",
    "frame49",
    "divider",
    "frame56",
    "frame65",
    "frame66",
    "categoryDefault",
    "categoryExpanded",
    "recent",
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2"
  ],
  frame77: ["frame77"],
  panel: [
    "panel",
    "frame63",
    "frame46",
    "avatar",
    "frame52",
    "frame64",
    "search",
    "frame47",
    "filterWithSelected",
    "frame48",
    "frame49",
    "divider",
    "frame56",
    "frame65",
    "frame66",
    "categoryDefault",
    "categoryExpanded",
    "recent",
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2"
  ],
  frame63: [
    "frame63",
    "frame46",
    "avatar",
    "frame52",
    "frame64",
    "search",
    "frame47",
    "filterWithSelected",
    "frame48",
    "frame49",
    "divider",
    "frame56"
  ],
  frame46: ["frame46", "avatar", "frame52"],
  avatar: ["avatar"],
  frame52: ["frame52"],
  frame64: [
    "frame64",
    "search",
    "frame47",
    "filterWithSelected",
    "frame48",
    "frame49",
    "divider",
    "frame56"
  ],
  search: ["search", "frame47"],
  frame47: ["frame47"],
  filterWithSelected: ["filterWithSelected", "frame48", "frame49"],
  frame48: ["frame48", "frame49"],
  frame49: ["frame49"],
  divider: ["divider", "frame56"],
  frame56: ["frame56"],
  frame65: [
    "frame65",
    "frame66",
    "categoryDefault",
    "categoryExpanded",
    "recent",
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2"
  ],
  frame66: [
    "frame66",
    "categoryDefault",
    "categoryExpanded",
    "recent",
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2"
  ],
  categoryDefault: ["categoryDefault"],
  categoryExpanded: [
    "categoryExpanded",
    "recent",
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2"
  ],
  recent: ["recent"],
  catergoryItem: [
    "catergoryItem",
    "noteItemDefault",
    "noteItemHover",
    "head",
    "diary",
    "noteItemDefault2",
    "diary2"
  ],
  noteItemDefault: ["noteItemDefault"],
  noteItemHover: ["noteItemHover", "head", "diary"],
  head: ["head", "diary"],
  diary: ["diary"],
  noteItemDefault2: ["noteItemDefault2", "diary2"],
  diary2: ["diary2"],
  bottomPart: [
    "bottomPart",
    "settingLogout",
    "noteItemDefault3",
    "settings",
    "noteItemDefault4"
  ],
  settingLogout: [
    "settingLogout",
    "noteItemDefault3",
    "settings",
    "noteItemDefault4"
  ],
  noteItemDefault3: ["noteItemDefault3", "settings"],
  settings: ["settings"],
  noteItemDefault4: ["noteItemDefault4"],
  verticalStackWindow: [
    "verticalStackWindow",
    "dashboardHeader",
    "dashboardNavDesktop",
    "createButtons",
    "logoDefault",
    "logo",
    "group11",
    "rectangle2",
    "dashboardHover",
    "sidebarToggle",
    "layoutDashboard",
    "createNoteDefault",
    "layer1",
    "createFolderDefault",
    "layer12",
    "searchFilterDefault",
    "filterSearchIcon",
    "sidebarTogglerHover",
    "dashboardWindow",
    "dashboardBody",
    "desktopRecentArea",
    "title",
    "divider2",
    "frame57",
    "createButtons2",
    "recentNoteDesktop",
    "imageHolder",
    "image",
    "body",
    "text",
    "recentNoteDesktop2",
    "imageHolder2",
    "image2",
    "body2",
    "text2",
    "recentNoteDesktop3",
    "imageHolder3",
    "image3",
    "body3",
    "text3",
    "desktopCreateElement",
    "title2",
    "divider3",
    "frame58",
    "createButtons3",
    "notes",
    "createNote",
    "layer13",
    "notes2",
    "folder",
    "createFolderIcon",
    "layer14",
    "notes3",
    "desktopTabWindow",
    "tabContainer",
    "tabs",
    "tabButtonDefault",
    "tabButtonActive",
    "divider4",
    "frame59",
    "expanded",
    "head2",
    "name",
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list",
    "desktopFolderList",
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit",
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2",
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3",
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4",
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5",
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6",
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7",
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8",
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9",
    "pagination",
    "pagination2"
  ],
  dashboardHeader: [
    "dashboardHeader",
    "dashboardNavDesktop",
    "createButtons",
    "logoDefault",
    "logo",
    "group11",
    "rectangle2",
    "dashboardHover",
    "sidebarToggle",
    "layoutDashboard",
    "createNoteDefault",
    "layer1",
    "createFolderDefault",
    "layer12",
    "searchFilterDefault",
    "filterSearchIcon",
    "sidebarTogglerHover"
  ],
  dashboardNavDesktop: [
    "dashboardNavDesktop",
    "createButtons",
    "logoDefault",
    "logo",
    "group11",
    "rectangle2",
    "dashboardHover",
    "sidebarToggle",
    "layoutDashboard",
    "createNoteDefault",
    "layer1",
    "createFolderDefault",
    "layer12",
    "searchFilterDefault",
    "filterSearchIcon",
    "sidebarTogglerHover"
  ],
  createButtons: [
    "createButtons",
    "logoDefault",
    "logo",
    "group11",
    "rectangle2",
    "dashboardHover",
    "sidebarToggle",
    "layoutDashboard",
    "createNoteDefault",
    "layer1",
    "createFolderDefault",
    "layer12",
    "searchFilterDefault",
    "filterSearchIcon",
    "sidebarTogglerHover"
  ],
  logoDefault: ["logoDefault", "logo", "group11", "rectangle2"],
  logo: ["logo", "group11", "rectangle2"],
  group11: ["group11", "rectangle2"],
  rectangle2: ["rectangle2"],
  dashboardHover: ["dashboardHover", "sidebarToggle", "layoutDashboard"],
  sidebarToggle: ["sidebarToggle", "layoutDashboard"],
  layoutDashboard: ["layoutDashboard"],
  createNoteDefault: ["createNoteDefault", "layer1"],
  layer1: ["layer1"],
  createFolderDefault: ["createFolderDefault", "layer12"],
  layer12: ["layer12"],
  searchFilterDefault: ["searchFilterDefault", "filterSearchIcon"],
  filterSearchIcon: ["filterSearchIcon"],
  sidebarTogglerHover: ["sidebarTogglerHover"],
  dashboardWindow: [
    "dashboardWindow",
    "dashboardBody",
    "desktopRecentArea",
    "title",
    "divider2",
    "frame57",
    "createButtons2",
    "recentNoteDesktop",
    "imageHolder",
    "image",
    "body",
    "text",
    "recentNoteDesktop2",
    "imageHolder2",
    "image2",
    "body2",
    "text2",
    "recentNoteDesktop3",
    "imageHolder3",
    "image3",
    "body3",
    "text3",
    "desktopCreateElement",
    "title2",
    "divider3",
    "frame58",
    "createButtons3",
    "notes",
    "createNote",
    "layer13",
    "notes2",
    "folder",
    "createFolderIcon",
    "layer14",
    "notes3",
    "desktopTabWindow",
    "tabContainer",
    "tabs",
    "tabButtonDefault",
    "tabButtonActive",
    "divider4",
    "frame59",
    "expanded",
    "head2",
    "name",
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list",
    "desktopFolderList",
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit",
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2",
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3",
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4",
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5",
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6",
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7",
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8",
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9",
    "pagination",
    "pagination2"
  ],
  dashboardBody: [
    "dashboardBody",
    "desktopRecentArea",
    "title",
    "divider2",
    "frame57",
    "createButtons2",
    "recentNoteDesktop",
    "imageHolder",
    "image",
    "body",
    "text",
    "recentNoteDesktop2",
    "imageHolder2",
    "image2",
    "body2",
    "text2",
    "recentNoteDesktop3",
    "imageHolder3",
    "image3",
    "body3",
    "text3",
    "desktopCreateElement",
    "title2",
    "divider3",
    "frame58",
    "createButtons3",
    "notes",
    "createNote",
    "layer13",
    "notes2",
    "folder",
    "createFolderIcon",
    "layer14",
    "notes3",
    "desktopTabWindow",
    "tabContainer",
    "tabs",
    "tabButtonDefault",
    "tabButtonActive",
    "divider4",
    "frame59",
    "expanded",
    "head2",
    "name",
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list",
    "desktopFolderList",
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit",
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2",
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3",
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4",
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5",
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6",
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7",
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8",
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9",
    "pagination",
    "pagination2"
  ],
  desktopRecentArea: [
    "desktopRecentArea",
    "title",
    "divider2",
    "frame57",
    "createButtons2",
    "recentNoteDesktop",
    "imageHolder",
    "image",
    "body",
    "text",
    "recentNoteDesktop2",
    "imageHolder2",
    "image2",
    "body2",
    "text2",
    "recentNoteDesktop3",
    "imageHolder3",
    "image3",
    "body3",
    "text3"
  ],
  title: ["title", "divider2", "frame57"],
  divider2: ["divider2", "frame57"],
  frame57: ["frame57"],
  createButtons2: [
    "createButtons2",
    "recentNoteDesktop",
    "imageHolder",
    "image",
    "body",
    "text",
    "recentNoteDesktop2",
    "imageHolder2",
    "image2",
    "body2",
    "text2",
    "recentNoteDesktop3",
    "imageHolder3",
    "image3",
    "body3",
    "text3"
  ],
  recentNoteDesktop: [
    "recentNoteDesktop",
    "imageHolder",
    "image",
    "body",
    "text"
  ],
  imageHolder: ["imageHolder", "image"],
  image: ["image"],
  body: ["body", "text"],
  text: ["text"],
  recentNoteDesktop2: [
    "recentNoteDesktop2",
    "imageHolder2",
    "image2",
    "body2",
    "text2"
  ],
  imageHolder2: ["imageHolder2", "image2"],
  image2: ["image2"],
  body2: ["body2", "text2"],
  text2: ["text2"],
  recentNoteDesktop3: [
    "recentNoteDesktop3",
    "imageHolder3",
    "image3",
    "body3",
    "text3"
  ],
  imageHolder3: ["imageHolder3", "image3"],
  image3: ["image3"],
  body3: ["body3", "text3"],
  text3: ["text3"],
  desktopCreateElement: [
    "desktopCreateElement",
    "title2",
    "divider3",
    "frame58",
    "createButtons3",
    "notes",
    "createNote",
    "layer13",
    "notes2",
    "folder",
    "createFolderIcon",
    "layer14",
    "notes3"
  ],
  title2: ["title2", "divider3", "frame58"],
  divider3: ["divider3", "frame58"],
  frame58: ["frame58"],
  createButtons3: [
    "createButtons3",
    "notes",
    "createNote",
    "layer13",
    "notes2",
    "folder",
    "createFolderIcon",
    "layer14",
    "notes3"
  ],
  notes: ["notes", "createNote", "layer13", "notes2"],
  createNote: ["createNote", "layer13"],
  layer13: ["layer13"],
  notes2: ["notes2"],
  folder: ["folder", "createFolderIcon", "layer14", "notes3"],
  createFolderIcon: ["createFolderIcon", "layer14"],
  layer14: ["layer14"],
  notes3: ["notes3"],
  desktopTabWindow: [
    "desktopTabWindow",
    "tabContainer",
    "tabs",
    "tabButtonDefault",
    "tabButtonActive",
    "divider4",
    "frame59",
    "expanded",
    "head2",
    "name",
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list",
    "desktopFolderList",
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit",
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2",
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3",
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4",
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5",
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6",
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7",
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8",
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9",
    "pagination",
    "pagination2"
  ],
  tabContainer: [
    "tabContainer",
    "tabs",
    "tabButtonDefault",
    "tabButtonActive",
    "divider4",
    "frame59"
  ],
  tabs: ["tabs", "tabButtonDefault", "tabButtonActive"],
  tabButtonDefault: ["tabButtonDefault"],
  tabButtonActive: ["tabButtonActive"],
  divider4: ["divider4", "frame59"],
  frame59: ["frame59"],
  expanded: [
    "expanded",
    "head2",
    "name",
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list",
    "desktopFolderList",
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit",
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2",
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3",
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4",
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5",
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6",
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7",
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8",
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9",
    "pagination",
    "pagination2"
  ],
  head2: [
    "head2",
    "name",
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list"
  ],
  name: ["name"],
  all: [
    "all",
    "search2",
    "frame50",
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list"
  ],
  search2: ["search2", "frame50"],
  frame50: ["frame50"],
  filter: [
    "filter",
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2",
    "viewAs",
    "grid",
    "list"
  ],
  filterBy: [
    "filterBy",
    "category",
    "arrowSquareDownDefault",
    "info",
    "arrowSquareDownDefault2"
  ],
  category: ["category", "arrowSquareDownDefault"],
  arrowSquareDownDefault: ["arrowSquareDownDefault"],
  info: ["info", "arrowSquareDownDefault2"],
  arrowSquareDownDefault2: ["arrowSquareDownDefault2"],
  viewAs: ["viewAs", "grid", "list"],
  grid: ["grid"],
  list: ["list"],
  desktopFolderList: [
    "desktopFolderList",
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit",
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2",
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3",
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4",
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5",
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6",
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7",
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8",
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9"
  ],
  codeReview: [
    "codeReview",
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2",
    "created",
    "_9Files",
    "lastUpdated",
    "edit"
  ],
  card: [
    "card",
    "image4",
    "folderIcon",
    "body4",
    "text4",
    "codeReview2",
    "buttonGroup",
    "button",
    "button2"
  ],
  image4: ["image4", "folderIcon"],
  folderIcon: ["folderIcon"],
  body4: ["body4", "text4", "codeReview2", "buttonGroup", "button", "button2"],
  text4: ["text4", "codeReview2"],
  codeReview2: ["codeReview2"],
  buttonGroup: ["buttonGroup", "button", "button2"],
  button: ["button"],
  button2: ["button2"],
  created: ["created", "_9Files"],
  _9Files: ["_9Files"],
  lastUpdated: ["lastUpdated"],
  edit: ["edit"],
  taskList: [
    "taskList",
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4",
    "created2",
    "_9Files2",
    "lastUpdated2",
    "_9MinAgo",
    "edit2"
  ],
  card2: [
    "card2",
    "image5",
    "folderIcon2",
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4"
  ],
  image5: ["image5", "folderIcon2"],
  folderIcon2: ["folderIcon2"],
  body5: [
    "body5",
    "text5",
    "codeReview3",
    "buttonGroup2",
    "button3",
    "button4"
  ],
  text5: ["text5", "codeReview3"],
  codeReview3: ["codeReview3"],
  buttonGroup2: ["buttonGroup2", "button3", "button4"],
  button3: ["button3"],
  button4: ["button4"],
  created2: ["created2", "_9Files2"],
  _9Files2: ["_9Files2"],
  lastUpdated2: ["lastUpdated2", "_9MinAgo"],
  _9MinAgo: ["_9MinAgo"],
  edit2: ["edit2"],
  map: [
    "map",
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6",
    "created3",
    "_9Files3",
    "lastUpdated3",
    "_9MinAgo2",
    "edit3"
  ],
  card3: [
    "card3",
    "image6",
    "folderIcon3",
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6"
  ],
  image6: ["image6", "folderIcon3"],
  folderIcon3: ["folderIcon3"],
  body6: [
    "body6",
    "text6",
    "codeReview4",
    "buttonGroup3",
    "button5",
    "button6"
  ],
  text6: ["text6", "codeReview4"],
  codeReview4: ["codeReview4"],
  buttonGroup3: ["buttonGroup3", "button5", "button6"],
  button5: ["button5"],
  button6: ["button6"],
  created3: ["created3", "_9Files3"],
  _9Files3: ["_9Files3"],
  lastUpdated3: ["lastUpdated3", "_9MinAgo2"],
  _9MinAgo2: ["_9MinAgo2"],
  edit3: ["edit3"],
  market: [
    "market",
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8",
    "created4",
    "_9Files4",
    "lastUpdated4",
    "_9MinAgo3",
    "edit4"
  ],
  card4: [
    "card4",
    "image7",
    "folderIcon4",
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8"
  ],
  image7: ["image7", "folderIcon4"],
  folderIcon4: ["folderIcon4"],
  body7: [
    "body7",
    "text7",
    "codeReview5",
    "buttonGroup4",
    "button7",
    "button8"
  ],
  text7: ["text7", "codeReview5"],
  codeReview5: ["codeReview5"],
  buttonGroup4: ["buttonGroup4", "button7", "button8"],
  button7: ["button7"],
  button8: ["button8"],
  created4: ["created4", "_9Files4"],
  _9Files4: ["_9Files4"],
  lastUpdated4: ["lastUpdated4", "_9MinAgo3"],
  _9MinAgo3: ["_9MinAgo3"],
  edit4: ["edit4"],
  story: [
    "story",
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10",
    "created5",
    "_9Files5",
    "lastUpdated5",
    "_9MinAgo4",
    "edit5"
  ],
  card5: [
    "card5",
    "image8",
    "folderIcon5",
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10"
  ],
  image8: ["image8", "folderIcon5"],
  folderIcon5: ["folderIcon5"],
  body8: [
    "body8",
    "text8",
    "codeReview6",
    "buttonGroup5",
    "button9",
    "button10"
  ],
  text8: ["text8", "codeReview6"],
  codeReview6: ["codeReview6"],
  buttonGroup5: ["buttonGroup5", "button9", "button10"],
  button9: ["button9"],
  button10: ["button10"],
  created5: ["created5", "_9Files5"],
  _9Files5: ["_9Files5"],
  lastUpdated5: ["lastUpdated5", "_9MinAgo4"],
  _9MinAgo4: ["_9MinAgo4"],
  edit5: ["edit5"],
  movie: [
    "movie",
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12",
    "created6",
    "_9Files6",
    "lastUpdated6",
    "_9MinAgo5",
    "edit6"
  ],
  card6: [
    "card6",
    "image9",
    "folderIcon6",
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12"
  ],
  image9: ["image9", "folderIcon6"],
  folderIcon6: ["folderIcon6"],
  body9: [
    "body9",
    "text9",
    "codeReview7",
    "buttonGroup6",
    "button11",
    "button12"
  ],
  text9: ["text9", "codeReview7"],
  codeReview7: ["codeReview7"],
  buttonGroup6: ["buttonGroup6", "button11", "button12"],
  button11: ["button11"],
  button12: ["button12"],
  created6: ["created6", "_9Files6"],
  _9Files6: ["_9Files6"],
  lastUpdated6: ["lastUpdated6", "_9MinAgo5"],
  _9MinAgo5: ["_9MinAgo5"],
  edit6: ["edit6"],
  work: [
    "work",
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14",
    "created7",
    "_9Files7",
    "lastUpdated7",
    "_9MinAgo6",
    "edit7"
  ],
  card7: [
    "card7",
    "image10",
    "folderIcon7",
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14"
  ],
  image10: ["image10", "folderIcon7"],
  folderIcon7: ["folderIcon7"],
  body10: [
    "body10",
    "text10",
    "codeReview8",
    "buttonGroup7",
    "button13",
    "button14"
  ],
  text10: ["text10", "codeReview8"],
  codeReview8: ["codeReview8"],
  buttonGroup7: ["buttonGroup7", "button13", "button14"],
  button13: ["button13"],
  button14: ["button14"],
  created7: ["created7", "_9Files7"],
  _9Files7: ["_9Files7"],
  lastUpdated7: ["lastUpdated7", "_9MinAgo6"],
  _9MinAgo6: ["_9MinAgo6"],
  edit7: ["edit7"],
  family: [
    "family",
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16",
    "created8",
    "_9Files8",
    "lastUpdated8",
    "_9MinAgo7",
    "edit8"
  ],
  card8: [
    "card8",
    "image11",
    "folderIcon8",
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16"
  ],
  image11: ["image11", "folderIcon8"],
  folderIcon8: ["folderIcon8"],
  body11: [
    "body11",
    "text11",
    "codeReview9",
    "buttonGroup8",
    "button15",
    "button16"
  ],
  text11: ["text11", "codeReview9"],
  codeReview9: ["codeReview9"],
  buttonGroup8: ["buttonGroup8", "button15", "button16"],
  button15: ["button15"],
  button16: ["button16"],
  created8: ["created8", "_9Files8"],
  _9Files8: ["_9Files8"],
  lastUpdated8: ["lastUpdated8", "_9MinAgo7"],
  _9MinAgo7: ["_9MinAgo7"],
  edit8: ["edit8"],
  game: [
    "game",
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18",
    "created9",
    "_9Files9",
    "lastUpdated9",
    "_9MinAgo8",
    "edit9"
  ],
  card9: [
    "card9",
    "image12",
    "folderIcon9",
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18"
  ],
  image12: ["image12", "folderIcon9"],
  folderIcon9: ["folderIcon9"],
  body12: [
    "body12",
    "text12",
    "codeReview10",
    "buttonGroup9",
    "button17",
    "button18"
  ],
  text12: ["text12", "codeReview10"],
  codeReview10: ["codeReview10"],
  buttonGroup9: ["buttonGroup9", "button17", "button18"],
  button17: ["button17"],
  button18: ["button18"],
  created9: ["created9", "_9Files9"],
  _9Files9: ["_9Files9"],
  lastUpdated9: ["lastUpdated9", "_9MinAgo8"],
  _9MinAgo8: ["_9MinAgo8"],
  edit9: ["edit9"],
  pagination: ["pagination", "pagination2"],
  pagination2: ["pagination2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  appDashboard: "div";
  sidebarDashboard: "div";
  sidebar: "div";
  upperPart: "div";
  frame77: "div";
  panel: "div";
  frame63: "div";
  frame46: "div";
  avatar: typeof AntdAvatar;
  frame52: "div";
  frame64: "div";
  search: "div";
  frame47: "div";
  filterWithSelected: "div";
  frame48: "div";
  frame49: "div";
  divider: "div";
  frame56: "div";
  frame65: "div";
  frame66: "div";
  categoryDefault: "div";
  categoryExpanded: "div";
  recent: "div";
  catergoryItem: "div";
  noteItemDefault: "div";
  noteItemHover: "div";
  head: "div";
  diary: "div";
  noteItemDefault2: "div";
  diary2: "div";
  bottomPart: "div";
  settingLogout: "div";
  noteItemDefault3: "div";
  settings: "div";
  noteItemDefault4: "div";
  verticalStackWindow: "div";
  dashboardHeader: "div";
  dashboardNavDesktop: "div";
  createButtons: "div";
  logoDefault: "div";
  logo: "div";
  group11: "div";
  rectangle2: "div";
  dashboardHover: "div";
  sidebarToggle: "div";
  layoutDashboard: "div";
  createNoteDefault: "div";
  layer1: "div";
  createFolderDefault: "div";
  layer12: "div";
  searchFilterDefault: "div";
  filterSearchIcon: "div";
  sidebarTogglerHover: "div";
  dashboardWindow: "div";
  dashboardBody: "div";
  desktopRecentArea: "div";
  title: "div";
  divider2: "div";
  frame57: "div";
  createButtons2: "div";
  recentNoteDesktop: "div";
  imageHolder: "div";
  image: "div";
  body: "div";
  text: "div";
  recentNoteDesktop2: "div";
  imageHolder2: "div";
  image2: "div";
  body2: "div";
  text2: "div";
  recentNoteDesktop3: "div";
  imageHolder3: "div";
  image3: "div";
  body3: "div";
  text3: "div";
  desktopCreateElement: "div";
  title2: "div";
  divider3: "div";
  frame58: "div";
  createButtons3: "div";
  notes: "div";
  createNote: "div";
  layer13: "div";
  notes2: "div";
  folder: "div";
  createFolderIcon: "div";
  layer14: "div";
  notes3: "div";
  desktopTabWindow: "div";
  tabContainer: "div";
  tabs: "div";
  tabButtonDefault: "div";
  tabButtonActive: "div";
  divider4: "div";
  frame59: "div";
  expanded: "div";
  head2: "div";
  name: "div";
  all: "div";
  search2: "div";
  frame50: "div";
  filter: "div";
  filterBy: "div";
  category: "div";
  arrowSquareDownDefault: "div";
  info: "div";
  arrowSquareDownDefault2: "div";
  viewAs: "div";
  grid: "div";
  list: "div";
  desktopFolderList: "div";
  codeReview: "div";
  card: "div";
  image4: "div";
  folderIcon: "div";
  body4: "div";
  text4: "div";
  codeReview2: "div";
  buttonGroup: "div";
  button: typeof AntdButton;
  button2: typeof AntdButton;
  created: "div";
  _9Files: "div";
  lastUpdated: "div";
  edit: "div";
  taskList: "div";
  card2: "div";
  image5: "div";
  folderIcon2: "div";
  body5: "div";
  text5: "div";
  codeReview3: "div";
  buttonGroup2: "div";
  button3: typeof AntdButton;
  button4: typeof AntdButton;
  created2: "div";
  _9Files2: "div";
  lastUpdated2: "div";
  _9MinAgo: "div";
  edit2: "div";
  map: "div";
  card3: "div";
  image6: "div";
  folderIcon3: "div";
  body6: "div";
  text6: "div";
  codeReview4: "div";
  buttonGroup3: "div";
  button5: typeof AntdButton;
  button6: typeof AntdButton;
  created3: "div";
  _9Files3: "div";
  lastUpdated3: "div";
  _9MinAgo2: "div";
  edit3: "div";
  market: "div";
  card4: "div";
  image7: "div";
  folderIcon4: "div";
  body7: "div";
  text7: "div";
  codeReview5: "div";
  buttonGroup4: "div";
  button7: typeof AntdButton;
  button8: typeof AntdButton;
  created4: "div";
  _9Files4: "div";
  lastUpdated4: "div";
  _9MinAgo3: "div";
  edit4: "div";
  story: "div";
  card5: "div";
  image8: "div";
  folderIcon5: "div";
  body8: "div";
  text8: "div";
  codeReview6: "div";
  buttonGroup5: "div";
  button9: typeof AntdButton;
  button10: typeof AntdButton;
  created5: "div";
  _9Files5: "div";
  lastUpdated5: "div";
  _9MinAgo4: "div";
  edit5: "div";
  movie: "div";
  card6: "div";
  image9: "div";
  folderIcon6: "div";
  body9: "div";
  text9: "div";
  codeReview7: "div";
  buttonGroup6: "div";
  button11: typeof AntdButton;
  button12: typeof AntdButton;
  created6: "div";
  _9Files6: "div";
  lastUpdated6: "div";
  _9MinAgo5: "div";
  edit6: "div";
  work: "div";
  card7: "div";
  image10: "div";
  folderIcon7: "div";
  body10: "div";
  text10: "div";
  codeReview8: "div";
  buttonGroup7: "div";
  button13: typeof AntdButton;
  button14: typeof AntdButton;
  created7: "div";
  _9Files7: "div";
  lastUpdated7: "div";
  _9MinAgo6: "div";
  edit7: "div";
  family: "div";
  card8: "div";
  image11: "div";
  folderIcon8: "div";
  body11: "div";
  text11: "div";
  codeReview9: "div";
  buttonGroup8: "div";
  button15: typeof AntdButton;
  button16: typeof AntdButton;
  created8: "div";
  _9Files8: "div";
  lastUpdated8: "div";
  _9MinAgo7: "div";
  edit8: "div";
  game: "div";
  card9: "div";
  image12: "div";
  folderIcon9: "div";
  body12: "div";
  text12: "div";
  codeReview10: "div";
  buttonGroup9: "div";
  button17: typeof AntdButton;
  button18: typeof AntdButton;
  created9: "div";
  _9Files9: "div";
  lastUpdated9: "div";
  _9MinAgo8: "div";
  edit9: "div";
  pagination: "div";
  pagination2: typeof AntdPagination;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "appDashboard") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "cidfrcHUv3GUJnrrNFqyUX"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  withUsePlasmicAuth(makeNodeComponent("appDashboard")),
  {
    // Helper components rendering sub-elements
    sidebarDashboard: makeNodeComponent("sidebarDashboard"),
    sidebar: makeNodeComponent("sidebar"),
    upperPart: makeNodeComponent("upperPart"),
    frame77: makeNodeComponent("frame77"),
    panel: makeNodeComponent("panel"),
    frame63: makeNodeComponent("frame63"),
    frame46: makeNodeComponent("frame46"),
    avatar: makeNodeComponent("avatar"),
    frame52: makeNodeComponent("frame52"),
    frame64: makeNodeComponent("frame64"),
    search: makeNodeComponent("search"),
    frame47: makeNodeComponent("frame47"),
    filterWithSelected: makeNodeComponent("filterWithSelected"),
    frame48: makeNodeComponent("frame48"),
    frame49: makeNodeComponent("frame49"),
    divider: makeNodeComponent("divider"),
    frame56: makeNodeComponent("frame56"),
    frame65: makeNodeComponent("frame65"),
    frame66: makeNodeComponent("frame66"),
    categoryDefault: makeNodeComponent("categoryDefault"),
    categoryExpanded: makeNodeComponent("categoryExpanded"),
    recent: makeNodeComponent("recent"),
    catergoryItem: makeNodeComponent("catergoryItem"),
    noteItemDefault: makeNodeComponent("noteItemDefault"),
    noteItemHover: makeNodeComponent("noteItemHover"),
    head: makeNodeComponent("head"),
    diary: makeNodeComponent("diary"),
    noteItemDefault2: makeNodeComponent("noteItemDefault2"),
    diary2: makeNodeComponent("diary2"),
    bottomPart: makeNodeComponent("bottomPart"),
    settingLogout: makeNodeComponent("settingLogout"),
    noteItemDefault3: makeNodeComponent("noteItemDefault3"),
    settings: makeNodeComponent("settings"),
    noteItemDefault4: makeNodeComponent("noteItemDefault4"),
    verticalStackWindow: makeNodeComponent("verticalStackWindow"),
    dashboardHeader: makeNodeComponent("dashboardHeader"),
    dashboardNavDesktop: makeNodeComponent("dashboardNavDesktop"),
    createButtons: makeNodeComponent("createButtons"),
    logoDefault: makeNodeComponent("logoDefault"),
    logo: makeNodeComponent("logo"),
    group11: makeNodeComponent("group11"),
    rectangle2: makeNodeComponent("rectangle2"),
    dashboardHover: makeNodeComponent("dashboardHover"),
    sidebarToggle: makeNodeComponent("sidebarToggle"),
    layoutDashboard: makeNodeComponent("layoutDashboard"),
    createNoteDefault: makeNodeComponent("createNoteDefault"),
    layer1: makeNodeComponent("layer1"),
    createFolderDefault: makeNodeComponent("createFolderDefault"),
    layer12: makeNodeComponent("layer12"),
    searchFilterDefault: makeNodeComponent("searchFilterDefault"),
    filterSearchIcon: makeNodeComponent("filterSearchIcon"),
    sidebarTogglerHover: makeNodeComponent("sidebarTogglerHover"),
    dashboardWindow: makeNodeComponent("dashboardWindow"),
    dashboardBody: makeNodeComponent("dashboardBody"),
    desktopRecentArea: makeNodeComponent("desktopRecentArea"),
    title: makeNodeComponent("title"),
    divider2: makeNodeComponent("divider2"),
    frame57: makeNodeComponent("frame57"),
    createButtons2: makeNodeComponent("createButtons2"),
    recentNoteDesktop: makeNodeComponent("recentNoteDesktop"),
    imageHolder: makeNodeComponent("imageHolder"),
    image: makeNodeComponent("image"),
    body: makeNodeComponent("body"),
    text: makeNodeComponent("text"),
    recentNoteDesktop2: makeNodeComponent("recentNoteDesktop2"),
    imageHolder2: makeNodeComponent("imageHolder2"),
    image2: makeNodeComponent("image2"),
    body2: makeNodeComponent("body2"),
    text2: makeNodeComponent("text2"),
    recentNoteDesktop3: makeNodeComponent("recentNoteDesktop3"),
    imageHolder3: makeNodeComponent("imageHolder3"),
    image3: makeNodeComponent("image3"),
    body3: makeNodeComponent("body3"),
    text3: makeNodeComponent("text3"),
    desktopCreateElement: makeNodeComponent("desktopCreateElement"),
    title2: makeNodeComponent("title2"),
    divider3: makeNodeComponent("divider3"),
    frame58: makeNodeComponent("frame58"),
    createButtons3: makeNodeComponent("createButtons3"),
    notes: makeNodeComponent("notes"),
    createNote: makeNodeComponent("createNote"),
    layer13: makeNodeComponent("layer13"),
    notes2: makeNodeComponent("notes2"),
    folder: makeNodeComponent("folder"),
    createFolderIcon: makeNodeComponent("createFolderIcon"),
    layer14: makeNodeComponent("layer14"),
    notes3: makeNodeComponent("notes3"),
    desktopTabWindow: makeNodeComponent("desktopTabWindow"),
    tabContainer: makeNodeComponent("tabContainer"),
    tabs: makeNodeComponent("tabs"),
    tabButtonDefault: makeNodeComponent("tabButtonDefault"),
    tabButtonActive: makeNodeComponent("tabButtonActive"),
    divider4: makeNodeComponent("divider4"),
    frame59: makeNodeComponent("frame59"),
    expanded: makeNodeComponent("expanded"),
    head2: makeNodeComponent("head2"),
    _name: makeNodeComponent("name"),
    all: makeNodeComponent("all"),
    search2: makeNodeComponent("search2"),
    frame50: makeNodeComponent("frame50"),
    filter: makeNodeComponent("filter"),
    filterBy: makeNodeComponent("filterBy"),
    category: makeNodeComponent("category"),
    arrowSquareDownDefault: makeNodeComponent("arrowSquareDownDefault"),
    info: makeNodeComponent("info"),
    arrowSquareDownDefault2: makeNodeComponent("arrowSquareDownDefault2"),
    viewAs: makeNodeComponent("viewAs"),
    grid: makeNodeComponent("grid"),
    list: makeNodeComponent("list"),
    desktopFolderList: makeNodeComponent("desktopFolderList"),
    codeReview: makeNodeComponent("codeReview"),
    card: makeNodeComponent("card"),
    image4: makeNodeComponent("image4"),
    folderIcon: makeNodeComponent("folderIcon"),
    body4: makeNodeComponent("body4"),
    text4: makeNodeComponent("text4"),
    codeReview2: makeNodeComponent("codeReview2"),
    buttonGroup: makeNodeComponent("buttonGroup"),
    button: makeNodeComponent("button"),
    button2: makeNodeComponent("button2"),
    created: makeNodeComponent("created"),
    _9Files: makeNodeComponent("_9Files"),
    lastUpdated: makeNodeComponent("lastUpdated"),
    edit: makeNodeComponent("edit"),
    taskList: makeNodeComponent("taskList"),
    card2: makeNodeComponent("card2"),
    image5: makeNodeComponent("image5"),
    folderIcon2: makeNodeComponent("folderIcon2"),
    body5: makeNodeComponent("body5"),
    text5: makeNodeComponent("text5"),
    codeReview3: makeNodeComponent("codeReview3"),
    buttonGroup2: makeNodeComponent("buttonGroup2"),
    button3: makeNodeComponent("button3"),
    button4: makeNodeComponent("button4"),
    created2: makeNodeComponent("created2"),
    _9Files2: makeNodeComponent("_9Files2"),
    lastUpdated2: makeNodeComponent("lastUpdated2"),
    _9MinAgo: makeNodeComponent("_9MinAgo"),
    edit2: makeNodeComponent("edit2"),
    map: makeNodeComponent("map"),
    card3: makeNodeComponent("card3"),
    image6: makeNodeComponent("image6"),
    folderIcon3: makeNodeComponent("folderIcon3"),
    body6: makeNodeComponent("body6"),
    text6: makeNodeComponent("text6"),
    codeReview4: makeNodeComponent("codeReview4"),
    buttonGroup3: makeNodeComponent("buttonGroup3"),
    button5: makeNodeComponent("button5"),
    button6: makeNodeComponent("button6"),
    created3: makeNodeComponent("created3"),
    _9Files3: makeNodeComponent("_9Files3"),
    lastUpdated3: makeNodeComponent("lastUpdated3"),
    _9MinAgo2: makeNodeComponent("_9MinAgo2"),
    edit3: makeNodeComponent("edit3"),
    market: makeNodeComponent("market"),
    card4: makeNodeComponent("card4"),
    image7: makeNodeComponent("image7"),
    folderIcon4: makeNodeComponent("folderIcon4"),
    body7: makeNodeComponent("body7"),
    text7: makeNodeComponent("text7"),
    codeReview5: makeNodeComponent("codeReview5"),
    buttonGroup4: makeNodeComponent("buttonGroup4"),
    button7: makeNodeComponent("button7"),
    button8: makeNodeComponent("button8"),
    created4: makeNodeComponent("created4"),
    _9Files4: makeNodeComponent("_9Files4"),
    lastUpdated4: makeNodeComponent("lastUpdated4"),
    _9MinAgo3: makeNodeComponent("_9MinAgo3"),
    edit4: makeNodeComponent("edit4"),
    story: makeNodeComponent("story"),
    card5: makeNodeComponent("card5"),
    image8: makeNodeComponent("image8"),
    folderIcon5: makeNodeComponent("folderIcon5"),
    body8: makeNodeComponent("body8"),
    text8: makeNodeComponent("text8"),
    codeReview6: makeNodeComponent("codeReview6"),
    buttonGroup5: makeNodeComponent("buttonGroup5"),
    button9: makeNodeComponent("button9"),
    button10: makeNodeComponent("button10"),
    created5: makeNodeComponent("created5"),
    _9Files5: makeNodeComponent("_9Files5"),
    lastUpdated5: makeNodeComponent("lastUpdated5"),
    _9MinAgo4: makeNodeComponent("_9MinAgo4"),
    edit5: makeNodeComponent("edit5"),
    movie: makeNodeComponent("movie"),
    card6: makeNodeComponent("card6"),
    image9: makeNodeComponent("image9"),
    folderIcon6: makeNodeComponent("folderIcon6"),
    body9: makeNodeComponent("body9"),
    text9: makeNodeComponent("text9"),
    codeReview7: makeNodeComponent("codeReview7"),
    buttonGroup6: makeNodeComponent("buttonGroup6"),
    button11: makeNodeComponent("button11"),
    button12: makeNodeComponent("button12"),
    created6: makeNodeComponent("created6"),
    _9Files6: makeNodeComponent("_9Files6"),
    lastUpdated6: makeNodeComponent("lastUpdated6"),
    _9MinAgo5: makeNodeComponent("_9MinAgo5"),
    edit6: makeNodeComponent("edit6"),
    work: makeNodeComponent("work"),
    card7: makeNodeComponent("card7"),
    image10: makeNodeComponent("image10"),
    folderIcon7: makeNodeComponent("folderIcon7"),
    body10: makeNodeComponent("body10"),
    text10: makeNodeComponent("text10"),
    codeReview8: makeNodeComponent("codeReview8"),
    buttonGroup7: makeNodeComponent("buttonGroup7"),
    button13: makeNodeComponent("button13"),
    button14: makeNodeComponent("button14"),
    created7: makeNodeComponent("created7"),
    _9Files7: makeNodeComponent("_9Files7"),
    lastUpdated7: makeNodeComponent("lastUpdated7"),
    _9MinAgo6: makeNodeComponent("_9MinAgo6"),
    edit7: makeNodeComponent("edit7"),
    family: makeNodeComponent("family"),
    card8: makeNodeComponent("card8"),
    image11: makeNodeComponent("image11"),
    folderIcon8: makeNodeComponent("folderIcon8"),
    body11: makeNodeComponent("body11"),
    text11: makeNodeComponent("text11"),
    codeReview9: makeNodeComponent("codeReview9"),
    buttonGroup8: makeNodeComponent("buttonGroup8"),
    button15: makeNodeComponent("button15"),
    button16: makeNodeComponent("button16"),
    created8: makeNodeComponent("created8"),
    _9Files8: makeNodeComponent("_9Files8"),
    lastUpdated8: makeNodeComponent("lastUpdated8"),
    _9MinAgo7: makeNodeComponent("_9MinAgo7"),
    edit8: makeNodeComponent("edit8"),
    game: makeNodeComponent("game"),
    card9: makeNodeComponent("card9"),
    image12: makeNodeComponent("image12"),
    folderIcon9: makeNodeComponent("folderIcon9"),
    body12: makeNodeComponent("body12"),
    text12: makeNodeComponent("text12"),
    codeReview10: makeNodeComponent("codeReview10"),
    buttonGroup9: makeNodeComponent("buttonGroup9"),
    button17: makeNodeComponent("button17"),
    button18: makeNodeComponent("button18"),
    created9: makeNodeComponent("created9"),
    _9Files9: makeNodeComponent("_9Files9"),
    lastUpdated9: makeNodeComponent("lastUpdated9"),
    _9MinAgo8: makeNodeComponent("_9MinAgo8"),
    edit9: makeNodeComponent("edit9"),
    pagination: makeNodeComponent("pagination"),
    pagination2: makeNodeComponent("pagination2"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
